package handlers

import (
	"context"
	"fmt"
	"log"
	"strconv"

	tele "gopkg.in/telebot.v4"

	"TgDonation/internal/database/models"
)

func (h *Handler) sendThankYouToGroup(user tele.User, amount float64) {
	username := user.Username
	firstName := user.FirstName

	// –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	var displayName string
	if username != "" {
		displayName = "@" + username
	} else {
		displayName = firstName
	}

	// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
	message := fmt.Sprintf(
		"üôè –°–ø–∞—Å–∏–±–æ, <b>%s</b>, –∑–∞ –ø–æ–º–æ—â—å —Ñ—Ä–æ–Ω—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ <b>%s ‚ÇΩ</b>!",
		displayName,
		formatFloatNoTrailingZeros(amount),
	)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
	_, err := h.Bot.Send(tele.ChatID(h.GroupChatID), message, &tele.SendOptions{
		ParseMode: tele.ModeHTML,
	})
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É: %v", err)
	} else {
		log.Printf("–ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É: %s", message)
	}
}

// onDonation –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è
func (h *Handler) onDonation(c tele.Context) error {
	// 1. –°–±—Ä–∞—Å—ã–≤–∞–µ–º FSM (–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, —Ä–µ–∂–∏–º)
	h.resetFSM(c.Sender().ID)
	fsmObj := h.getOrCreateFSM(c.Sender().ID)

	// 2. –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–µ–π—á–∞—Å –º—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ StateStart
	if fsmObj.Current() != StateStart {
		return c.Send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.")
	}

	// 3. –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
	if err := deleteMessage(c); err != nil {
		log.Printf("[onDonation] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}

	// 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º user
	h.UserData[c.Sender().ID] = ensureUserData(h.UserData[c.Sender().ID])
	h.UserData[c.Sender().ID]["mode"] = "user"

	// 5. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞ (StateSelectBank)
	ctx := context.Background()
	if err := fsmObj.Event(ctx, StateSelectBank); err != nil {
		log.Printf("[onDonation] FSM Event Error: %v", err)
		h.resetFSM(c.Sender().ID)
		return c.Send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ FSM. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ, –≤—ã–±—Ä–∞–≤ \"–°–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ\".")
	}

	// 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å –±–∞–Ω–∫–∞–º–∏
	menu := createBankMenu()
	return c.Send("<b>–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫ –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:</b>", menu)
}

// onBankDetails –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –±–∞–Ω–∫–∞ (sber, vtb, sbp)
func (h *Handler) onBankDetails(c tele.Context) error {
	fsmObj := h.getOrCreateFSM(c.Sender().ID)

	// –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–æ callback)
	if err := deleteMessage(c); err != nil {
		log.Printf("[onBankDetails] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ StateSelectBank
	if fsmObj.Current() != StateSelectBank {
		h.resetFSM(c.Sender().ID)
		return c.Send("–í—ã–±–æ—Ä –±–∞–Ω–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.")
	}

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –±–∞–Ω–∫
	selectedBank := c.Callback().Data
	bankDetails, valid := getBankDetails(selectedBank)
	if !valid {
		return c.Send("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–∞–Ω–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	h.UserData[c.Sender().ID] = ensureUserData(h.UserData[c.Sender().ID])
	h.UserData[c.Sender().ID]["bank"] = bankDetails.BankName

	// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ StateEnterAmount
	ctx := context.Background()
	if err := fsmObj.Event(ctx, StateEnterAmount); err != nil {
		log.Printf("[onBankDetails] FSM Event Error: %v", err)
		h.resetFSM(c.Sender().ID)
		return c.Send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ FSM. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.")
	}

	// –í—ã–≤–æ–¥–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞ –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É
	text := bankDetails.Details + "\n\n<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:</b>"
	return c.Send(text)
}

// onEnterAmount –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—É–º–º—ã
func (h *Handler) onEnterAmount(c tele.Context) error {
	fsmObj := h.getOrCreateFSM(c.Sender().ID)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	if fsmObj.Current() != StateEnterAmount {
		h.resetFSM(c.Sender().ID)
		return c.Send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É —Å–µ–π—á–∞—Å. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.")
	}

	// –ü–æ–ø—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é ¬´üëå¬ª
	reaction := tele.Reaction{Type: "emoji", Emoji: "üëå"}
	reactions := tele.Reactions{Reactions: []tele.Reaction{reaction}, Big: false}
	if err := c.Bot().React(c.Sender(), c.Message(), reactions); err != nil {
		log.Printf("[onEnterAmount] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–∏: %v", err)
		// –Ω–µ –≤—ã—Ö–æ–¥–∏–º, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
	}

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É (–∫–∞–∫ —Å—Ç—Ä–æ–∫—É)
	userData := ensureUserData(h.UserData[c.Sender().ID])
	userData["amount"] = c.Text()

	// –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
	amountValue, err := strconv.ParseFloat(c.Text(), 64)
	if err != nil || amountValue <= 0 {
		return c.Send("<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (—á–∏—Å–ª–æ–º).</b>")
	}

	log.Printf("[onEnterAmount] User %d entered amount: %s", c.Sender().ID, c.Text())

	// –ü—Ä–æ—Å–∏–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫
	return c.Send("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ(—Å–∫—Ä–∏–Ω) —á–µ–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</b>")
}

// onUploadReceipt –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
func (h *Handler) onUploadReceipt(c tele.Context) error {
	fsmObj := h.getOrCreateFSM(c.Sender().ID)
	ctx := context.Background()

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	if fsmObj.Current() != StateEnterAmount {
		h.resetFSM(c.Sender().ID)
		return c.Send("<b>–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫ —Å–µ–π—á–∞—Å. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.</b>")
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
	if c.Message().Photo == nil {
		return c.Send("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —á–µ–∫–∞.</b>")
	}

	// –°–æ–∑–¥–∞—ë–º –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –≤ –ë–î
	donation, err := createDonation(h, c)
	if err != nil {
		log.Printf("[onUploadReceipt] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ donation: %v", err)
		h.resetFSM(c.Sender().ID)
		return c.Send("<b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</b>")
	}
	log.Printf("[onUploadReceipt] Donation created: ID=%d Amount=%.2f", donation.ID, donation.Amount)

	// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ StateFinish
	if err := fsmObj.Event(ctx, StateFinish); err != nil {
		log.Printf("[onUploadReceipt] FSM Event Error: %v", err)
		h.resetFSM(c.Sender().ID)
		return c.Send("<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ FSM. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.</b>")
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
	h.sendThankYouToGroup(*c.Sender(), donation.Amount)

	// –°–±—Ä–∞—Å—ã–≤–∞–µ–º FSM, —Ç.–∫. –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
	h.resetFSM(c.Sender().ID)

	// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
	menu := &tele.ReplyMarkup{}
	btnMainBack := menu.Data("‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu")
	menu.Inline(menu.Row(btnMainBack))

	return c.Send("<b>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø–æ–º–æ—â—å —Ñ—Ä–æ–Ω—Ç—É!</b>", menu)
}

// createDonation ‚Äì —Å–æ–∑–¥–∞—ë—Ç –∑–∞–ø–∏—Å—å –æ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å.
func createDonation(h *Handler, c tele.Context) (models.Donation, error) {
	// 1. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	var user models.User
	if err := h.DB.FirstOrCreate(&user, models.User{TgID: c.Sender().ID}).Error; err != nil {
		return models.Donation{}, fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏/–ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %w", err)
	}

	// 2. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—è bank –∏ amount
	data := ensureUserData(h.UserData[c.Sender().ID])
	bank, ok := data["bank"].(string)
	if !ok || bank == "" {
		return models.Donation{}, fmt.Errorf("–Ω–µ —É–∫–∞–∑–∞–Ω –±–∞–Ω–∫ –≤ userData")
	}

	amountStr, ok := data["amount"].(string)
	if !ok || amountStr == "" {
		return models.Donation{}, fmt.Errorf("–Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Å—É–º–º–∞ –≤ userData")
	}

	amountValue, err := strconv.ParseFloat(amountStr, 64)
	if err != nil || amountValue <= 0 {
		return models.Donation{}, fmt.Errorf("—Å—É–º–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞: %w", err)
	}

	// 3. –ü–æ–ª—É—á–∞–µ–º FileID –∏–∑ —Ñ–æ—Ç–∫–∏ —á–µ–∫–∞
	photo := c.Message().Photo
	if photo == nil {
		return models.Donation{}, fmt.Errorf("–Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")
	}
	fileID := photo.FileID

	// 4. –°–æ–∑–¥–∞—ë–º Donation
	donation := models.Donation{
		UserID:       user.ID,
		BankName:     bank,
		Amount:       amountValue,
		ReceiptPhoto: fileID,
	}
	// –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
	if err := h.DB.Create(&donation).Error; err != nil {
		return models.Donation{}, fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è donation: %w", err)
	}

	log.Printf("[createDonation] Donation (ID=%d) saved. Updating total balance...", donation.ID)

	// 5. –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å
	var total models.TotalDonation
	if err := h.DB.First(&total).Error; err != nil {
		// –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø–∏—Å–∏, —Å–æ–∑–¥–∞–¥–∏–º
		if err.Error() == "record not found" {
			total.Total = donation.Amount
			if err2 := h.DB.Create(&total).Error; err2 != nil {
				return models.Donation{}, fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ totalDonation: %w", err2)
			}
		} else {
			return models.Donation{}, fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ totalDonation: %w", err)
		}
	} else {
		// –ó–∞–ø–∏—Å—å –µ—Å—Ç—å, –æ–±–Ω–æ–≤–∏–º
		total.Total += donation.Amount
		if err := h.DB.Save(&total).Error; err != nil {
			return models.Donation{}, fmt.Errorf("–æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è totalDonation: %w", err)
		}
	}
	log.Printf("[createDonation] –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—ë–Ω: %.2f", total.Total)

	return donation, nil
}

// deleteMessage —É–¥–∞–ª—è–µ—Ç callback-—Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
func deleteMessage(c tele.Context) error {
	if c.Callback() != nil && c.Callback().Message != nil {
		return c.Bot().Delete(c.Callback().Message)
	}
	return nil
}

// ensureUserData —É–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ data –Ω–µ nil
func ensureUserData(data map[string]interface{}) map[string]interface{} {
	if data == nil {
		return make(map[string]interface{})
	}
	return data
}

// getBankDetails –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞ –ø–æ –µ–≥–æ –∫–æ—Ä–æ—Ç–∫–æ–º—É –∏–º–µ–Ω–∏ (sber, vtb, sbp)
func getBankDetails(bank string) (BankDetails, bool) {
	switch bank {
	case "sber":
		return BankDetails{
			BankName: "–°–±–µ—Ä–±–∞–Ω–∫",
			Details:  "üü¢ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –°–±–µ—Ä–±–∞–Ω–∫–∞:</b>\n–ö–∞—Ä—Ç–∞:<code> 2202 2080 3701 1005</code>\n<b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> –õ—É–∫–∏—á—ë–≤–∞ –Æ.–ù",
		}, true
	case "vtb":
		return BankDetails{
			BankName: "–í–¢–ë",
			Details:  "üîµ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –í–¢–ë:</b>\n–ö–∞—Ä—Ç–∞:<code> 2200 2402 1368 9108</code>\n<b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> –õ—É–∫–∏—á—ë–≤–∞ –Æ.–ù",
		}, true
	case "sbp":
		return BankDetails{
			BankName: "–°–ë–ü",
			Details:  "üí† <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –°–ë–ü:</b>\n–¢–µ–ª–µ—Ñ–æ–Ω:<code> +7 963 752-92-99</code>\n<b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> –õ—É–∫–∏—á—ë–≤–∞ –Æ.–ù",
		}, true
	default:
		return BankDetails{}, false
	}
}

// createBankMenu —Å–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –±–∞–Ω–∫–∞
func createBankMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}
	btnSber := menu.Data("üü¢ –°–±–µ—Ä–±–∞–Ω–∫", "sber", "sber")
	btnVTB := menu.Data("üîµ –í–¢–ë", "vtb", "vtb")
	btnSBP := menu.Data("üí† –°–ë–ü", "sbp", "sbp")
	btnBack := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "main_menu")

	menu.Inline(
		menu.Row(btnSber, btnVTB, btnSBP),
		menu.Row(btnBack),
	)
	return menu
}

// BankDetails —Ö—Ä–∞–Ω–∏—Ç –∫—Ä–∞—Ç–∫–æ–µ –∏–º—è –±–∞–Ω–∫–∞ –∏ —Ç–µ–∫—Å—Ç —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
type BankDetails struct {
	BankName string
	Details  string
}

func (h *Handler) onMainMenu(c tele.Context) error {
	h.resetFSM(c.Sender().ID)
	if err := c.Bot().Delete(c.Callback().Message); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}

	return h.onStart(c)
}
