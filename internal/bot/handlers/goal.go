package handlers

import (
	"TgDonation/internal/database/models"
	"fmt"
	"log"

	tele "gopkg.in/telebot.v4"
)

func (h *Handler) onGoal(c tele.Context) error {
	// –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
	if err := c.Bot().Delete(c.Callback().Message); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ü–µ–ª–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	var goals []models.Goal
	if err := h.DB.Where("status = ?", "active").Find(&goals).Error; err != nil {
		return c.Send("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–µ–ª–µ–π.")
	}

	// –ï—Å–ª–∏ —Ü–µ–ª–µ–π –Ω–µ—Ç
	if len(goals) == 0 {
		return c.Send("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.")
	}

	// –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
	menu := &tele.ReplyMarkup{}
	btnBack := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back")
	menu.Inline(
		menu.Row(btnBack),
	)

	// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ü–µ–ª—è—Ö
	message := "üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–ª–∏:</b>\n"
	for i, g := range goals {
		progress := 0.0
		if g.TargetSum > 0 {
			progress = (g.CurrentSum / g.TargetSum) * 100
		}
		message += fmt.Sprintf("%d. <b>%s</b>\n–°–æ–±—Ä–∞–Ω–æ: %.2f –∏–∑ %.2f (%.2f%%)\n\n", i+1, g.Title, g.CurrentSum, g.TargetSum, progress)
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
	return c.Send(message, &tele.SendOptions{
		ParseMode:   tele.ModeHTML, // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
		ReplyMarkup: menu,          // –ü–µ—Ä–µ–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á–µ—Ä–µ–∑ SendOptions
	})
}
