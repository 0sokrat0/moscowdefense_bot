package handlers

//// –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
//func backButton(data string) *tele.ReplyMarkup {
//	back := &tele.ReplyMarkup{}
//	BackBtn := back.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", data)
//	back.Inline(back.Row(BackBtn))
//	return back
//}

// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
//func (h *Handler) onPanel(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
//	}
//
//	menu := &tele.ReplyMarkup{}
//	GoalsBtn := menu.Data("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏", "goals_panel")
//	StatisticBtn := menu.Data("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "statistic_panel")
//	BroadcastBtn := menu.Data("üì® –†–∞—Å—Å—ã–ª–∫–∞", "broadcast_panel")
//	AllocateFundsBtn := menu.Data("üîÑ –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞", "allocate_funds")
//	AddAdminBtn := menu.Data("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "add_admin")
//	BalanceBtn := menu.Data("üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º", "balance_panel")
//	BackBtn := menu.Data("üîô –ù–∞–∑–∞–¥", "back")
//
//	menu.Inline(
//		menu.Row(GoalsBtn, StatisticBtn),
//		menu.Row(BroadcastBtn),
//		menu.Row(AllocateFundsBtn),
//		menu.Row(AddAdminBtn),
//		menu.Row(BalanceBtn),
//		menu.Row(BackBtn),
//	)
//
//	return c.Send("–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", menu)
//}

//func (h *Handler) onBalancePanel(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	menu := &tele.ReplyMarkup{}
//	AddFunds := menu.Data("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞", "add_funds")
//	SubFunds := menu.Data("‚ûñ –í—ã—á–µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞", "sub_funds")
//	BackBtn := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//
//	menu.Inline(
//		menu.Row(AddFunds),
//		menu.Row(SubFunds),
//		menu.Row(BackBtn),
//	)
//
//	return c.Send("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º:", menu)
//}
//
//func (h *Handler) onAddFundsStart(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	h.resetFSM(c.Sender().ID)
//	fsm := h.getOrCreateAdminFSM(c.Sender().ID)
//	h.UserData[c.Sender().ID] = map[string]interface{}{
//		"action": "add_funds",
//		"mode":   "admin",
//	}
//
//	if err := fsm.Event(context.Background(), "wait_add_funds_amount"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ –æ–±—â–µ–º—É –±–∞–ª–∞–Ω—Å—É:")
//}
//
//func (h *Handler) processAddFunds(c tele.Context, fsm *fsm.FSM) error {
//	amountStr := c.Text()
//	amount, err := strconv.ParseFloat(amountStr, 64)
//	if err != nil || amount <= 0 {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
//	}
//
//	if err := h.addToTotalDonation(amount); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤: %v", err)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤.")
//	}
//
//	// –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
//	if err := h.reallocateFundsForAllGoals(); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤: %v", err)
//	}
//
//	h.resetFSM(c.Sender().ID)
//	delete(h.UserData, c.Sender().ID)
//	return c.Send(fmt.Sprintf("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ %.2f –∫ –æ–±—â–µ–º—É –±–∞–ª–∞–Ω—Å—É", amount), backButton("back_to_panel"))
//}
//
//func (h *Handler) onSubFundsStart(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	h.resetFSM(c.Sender().ID)
//	fsm := h.getOrCreateAdminFSM(c.Sender().ID)
//	h.UserData[c.Sender().ID] = map[string]interface{}{
//		"action": "sub_funds",
//		"mode":   "admin",
//	}
//
//	if err := fsm.Event(context.Background(), "wait_sub_funds_amount"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã—á–µ—Ç–∞ –∏–∑ –æ–±—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞:")
//}
//
//func (h *Handler) processSubFunds(c tele.Context, fsm *fsm.FSM) error {
//	amountStr := c.Text()
//	amount, err := strconv.ParseFloat(amountStr, 64)
//	if err != nil || amount <= 0 {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
//	}
//
//	if err := h.subtractFromTotalDonation(amount); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤: %v", err)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤.")
//	}
//
//	// –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
//	if err := h.reallocateFundsForAllGoals(); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤: %v", err)
//	}
//
//	h.resetFSM(c.Sender().ID)
//	delete(h.UserData, c.Sender().ID)
//	return c.Send(fmt.Sprintf("‚úÖ –í—ã—á—Ç–µ–Ω–æ %.2f –∏–∑ –æ–±—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞", amount), backButton("back_to_panel"))
//}
//
//func (h *Handler) addToTotalDonation(amount float64) error {
//	var totalRec models.TotalDonation
//	err := h.DB.First(&totalRec).Error
//	if err != nil {
//		// –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º
//		totalRec.Total = amount
//		return h.DB.Create(&totalRec).Error
//	}
//	totalRec.Total += amount
//	return h.DB.Save(&totalRec).Error
//}
//
//func (h *Handler) subtractFromTotalDonation(amount float64) error {
//	var totalRec models.TotalDonation
//	err := h.DB.First(&totalRec).Error
//	if err != nil {
//		// –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –∏–ª–∏ –æ—à–∏–±–∫–∞ ‚Äì —Ç–æ–≥–¥–∞ –Ω–µ—á–µ–≥–æ –≤—ã—á–∏—Ç–∞—Ç—å
//		return fmt.Errorf("–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã—á–µ—Ç–∞")
//	}
//	if totalRec.Total < amount {
//		// –ï—Å–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –≤—ã—á–µ—Å—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –µ—Å—Ç—å, —É–º–µ–Ω—å—à–∏–º –¥–æ –Ω—É–ª—è
//		amount = totalRec.Total
//	}
//	totalRec.Total -= amount
//	return h.DB.Save(&totalRec).Error
//}

//func (h *Handler) onAddAdminStart(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	h.resetFSM(c.Sender().ID)
//	fsm := h.getOrCreateAdminFSM(c.Sender().ID)
//	h.UserData[c.Sender().ID] = map[string]interface{}{
//		"action": "add_admin",
//		"mode":   "admin",
//	}
//
//	if err := fsm.Event(context.Background(), "add_admin_id"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ TG ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—á–∏—Å–ª–æ–º):")
//}
//
//func (h *Handler) processNewAdminID(c tele.Context, fsm *fsm.FSM) error {
//	idStr := c.Text()
//	newAdminID, err := strconv.Atoi(idStr)
//	if err != nil || newAdminID <= 0 {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
//	}
//
//	h.UserData[c.Sender().ID]["new_admin_id"] = newAdminID
//
//	if err := fsm.Event(context.Background(), "add_admin_username"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ username –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–±–µ–∑ @):")
//}
//
//func (h *Handler) processNewAdminUsername(c tele.Context, fsm *fsm.FSM) error {
//	username := c.Text()
//	if username == "" {
//		return c.Send("Username –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
//	}
//
//	h.UserData[c.Sender().ID]["new_admin_username"] = username
//
//	if err := fsm.Event(context.Background(), "finish_add_admin"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	return h.finishAddAdmin(c)
//}
//
//func (h *Handler) finishAddAdmin(c tele.Context) error {
//	data := h.UserData[c.Sender().ID]
//	if data == nil {
//		return c.Send("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
//	}
//
//	newAdminID := data["new_admin_id"].(int)
//	newAdminUsername := data["new_admin_username"].(string)
//
//	var count int64
//	h.DB.Model(&models.Admin{}).Where("tg_id = ?", newAdminID).Count(&count)
//	if count > 0 {
//		h.resetFSM(c.Sender().ID)
//		delete(h.UserData, c.Sender().ID)
//		return c.Send("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å —Ç–∞–∫–∏–º TG ID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", backButton("back_to_panel"))
//	}
//
//	admin := models.Admin{
//		TgID:     int64(newAdminID),
//		Username: newAdminUsername,
//		Role:     "admin",
//	}
//
//	if err := h.DB.Create(&admin).Error; err != nil {
//		h.resetFSM(c.Sender().ID)
//		delete(h.UserData, c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", backButton("back_to_panel"))
//	}
//
//	h.resetFSM(c.Sender().ID)
//	delete(h.UserData, c.Sender().ID)
//	return c.Send("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", backButton("back_to_panel"))
//}

//func (h *Handler) onBackToPanel(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	return h.onPanel(c)
//}

//func (h *Handler) onGoalsPanel(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	menu := &tele.ReplyMarkup{}
//	AddGoal := menu.Data("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å", "add_goal")
//	ListGoal := menu.Data("üìú –°–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π", "list_goal")
//	EditGoal := menu.Data("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª—å", "edit_goal")
//	DeleteGoal := menu.Data("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ü–µ–ª—å", "delete_goal")
//	BackBtn := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//
//	menu.Inline(
//		menu.Row(AddGoal, ListGoal),
//		menu.Row(EditGoal, DeleteGoal),
//		menu.Row(BackBtn),
//	)
//
//	return c.Send("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏:", menu)
//}

//func (h *Handler) onStatisticPanel(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	menu := &tele.ReplyMarkup{}
//	Statistic := menu.Data("üßÆ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "statistic")
//	BackBtn := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//
//	menu.Inline(
//		menu.Row(Statistic),
//		menu.Row(BackBtn),
//	)
//
//	return c.Send("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", menu)
//}
//
//func (h *Handler) onStatistic(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	var totalDonations float64
//	var donationsCount int64
//	var activeGoalsCount int64
//	var topGoal models.Goal
//
//	if err := h.DB.Model(&models.Donation{}).Select("COALESCE(SUM(amount),0)").Scan(&totalDonations).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
//	}
//
//	if err := h.DB.Model(&models.Donation{}).Count(&donationsCount).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
//	}
//
//	var avgDonation float64
//	if donationsCount > 0 {
//		avgDonation = totalDonations / float64(donationsCount)
//	}
//
//	if err := h.DB.Model(&models.Goal{}).Where("status = ?", "active").Count(&activeGoalsCount).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
//	}
//
//	if err := h.DB.Order("current_sum DESC").First(&topGoal).Error; err != nil {
//		// –ï—Å–ª–∏ —Ü–µ–ª–µ–π –Ω–µ—Ç - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
//	}
//
//	report := "<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
//	report += fmt.Sprintf("üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π: <b>%.2f</b>\n", totalDonations)
//	report += fmt.Sprintf("üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π: <b>%d</b>\n", donationsCount)
//	report += fmt.Sprintf("üí≤ –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è: <b>%.2f</b>\n", avgDonation)
//	report += fmt.Sprintf("üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π: <b>%d</b>\n", activeGoalsCount)
//
//	if topGoal.ID != 0 {
//		report += fmt.Sprintf("üèÜ –¢–æ–ø —Ü–µ–ª—å –ø–æ —Å–±–æ—Ä—É: <b>%s</b> (–¶–µ–ª–µ–≤–∞—è: %.2f)\n", topGoal.Title, topGoal.TargetSum)
//	} else {
//		report += "üèÜ –¢–æ–ø —Ü–µ–ª—å –ø–æ —Å–±–æ—Ä—É: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n"
//	}
//
//	back := backButton("back_to_panel")
//	return c.Send(report, back, tele.ModeHTML)
//}

//func (h *Handler) onAllocateFunds(c tele.Context) error {
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	h.resetFSM(c.Sender().ID)
//	f := h.getOrCreateAdminFSM(c.Sender().ID)
//	if err := f.Event(context.Background(), "start_allocate"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	h.UserData[c.Sender().ID] = map[string]interface{}{
//		"action": "allocate_funds",
//		"mode":   "admin",
//	}
//
//	var goals []models.Goal
//	if err := h.DB.Where("deleted_at IS NULL AND status <> 'finished'").Find(&goals).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ü–µ–ª–µ–π.")
//	}
//
//	if len(goals) == 0 {
//		return c.Send("–ù–µ—Ç —Ü–µ–ª–µ–π –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤.")
//	}
//
//	response := "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–ª–∏:\n"
//	for _, g := range goals {
//		response += fmt.Sprintf("ID: %d | –ù–∞–∑–≤–∞–Ω–∏–µ: %s | –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞: %.2f | –í—ã–¥–µ–ª–µ–Ω–æ: %.2f\n", g.ID, g.Title, g.TargetSum, g.AllocatedSum)
//	}
//	response += "\n–í–≤–µ–¥–∏—Ç–µ ID —Ü–µ–ª–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–µ–ª–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞:"
//
//	return c.Send(response)
//}
//
//func (h *Handler) processAllocateGoalSelect(c tele.Context, fsm *fsm.FSM) error {
//	goalIDStr := c.Text()
//	goalID, err := strconv.Atoi(goalIDStr)
//	if err != nil {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	var goal models.Goal
//	if err := h.DB.First(&goal, goalID).Error; err != nil {
//		return c.Send("–¶–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
//	}
//
//	h.UserData[c.Sender().ID]["allocate_goal_id"] = goalID
//
//	if err := fsm.Event(context.Background(), "allocate_wait_sum"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	return c.Send(fmt.Sprintf("–¶–µ–ª—å: %s\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è:", goal.Title))
//}
//
//func (h *Handler) processAllocateSum(c tele.Context, fsm *fsm.FSM) error {
//	data := h.UserData[c.Sender().ID]
//	if data == nil {
//		return c.Send("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.")
//	}
//	goalID, _ := data["allocate_goal_id"].(int)
//
//	sumStr := c.Text()
//	allocateSum, err := strconv.ParseFloat(sumStr, 64)
//	if err != nil || allocateSum <= 0 {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
//	}
//
//	free, err := h.getFreeFunds()
//	if err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.")
//	}
//
//	if allocateSum > free {
//		allocateSum = free
//	}
//
//	if allocateSum == 0 {
//		h.resetFSM(c.Sender().ID)
//		delete(h.UserData, c.Sender().ID)
//		return c.Send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è.", backButton("back_to_panel"))
//	}
//
//	var goal models.Goal
//	if err := h.DB.First(&goal, goalID).Error; err != nil {
//		h.resetFSM(c.Sender().ID)
//		delete(h.UserData, c.Sender().ID)
//		return c.Send("–¶–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", backButton("back_to_panel"))
//	}
//
//	goal.AllocatedSum += allocateSum
//	if err := h.DB.Save(&goal).Error; err != nil {
//		h.resetFSM(c.Sender().ID)
//		delete(h.UserData, c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–µ–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤ —Ü–µ–ª–∏.", backButton("back_to_panel"))
//	}
//
//	// –ü–æ—Å–ª–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å
//	if err := h.reallocateFundsForAllGoals(); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤: %v", err)
//	}
//
//	h.resetFSM(c.Sender().ID)
//	delete(h.UserData, c.Sender().ID)
//	return c.Send(fmt.Sprintf("‚úÖ –í—ã–¥–µ–ª–µ–Ω–æ %.2f –¥–ª—è —Ü–µ–ª–∏ \"%s\"", allocateSum, goal.Title), backButton("back_to_panel"))
//}
//
//func (h *Handler) getFreeFunds() (float64, error) {
//	var total float64
//	if err := h.DB.Model(&models.TotalDonation{}).Select("COALESCE(SUM(total),0)").Scan(&total).Error; err != nil {
//		return 0, err
//	}
//
//	var goals []models.Goal
//	if err := h.DB.Where("deleted_at IS NULL").Find(&goals).Error; err != nil {
//		return 0, err
//	}
//
//	var alreadyAllocated float64
//	for _, g := range goals {
//		alreadyAllocated += g.AllocatedSum
//	}
//
//	free := total - alreadyAllocated
//	if free < 0 {
//		free = 0
//	}
//	return free, nil
//}
//
//func (h *Handler) reallocateFundsForAllGoals() error {
//	var total float64
//	if err := h.DB.Model(&models.TotalDonation{}).Select("COALESCE(SUM(total),0)").Scan(&total).Error; err != nil {
//		return err
//	}
//
//	var goals []models.Goal
//	if err := h.DB.Where("deleted_at IS NULL").Find(&goals).Error; err != nil {
//		return err
//	}
//
//	var alreadyAllocated float64
//	for _, g := range goals {
//		alreadyAllocated += g.AllocatedSum
//	}
//
//	free := total - alreadyAllocated
//	if free <= 0 {
//		return nil
//	}
//
//	for i := range goals {
//		goal := &goals[i]
//		if goal.TargetSum > goal.AllocatedSum && goal.Status != "finished" {
//			needed := goal.TargetSum - goal.AllocatedSum
//			toAllocate := needed
//			if toAllocate > free {
//				toAllocate = free
//			}
//			goal.AllocatedSum += toAllocate
//			free -= toAllocate
//
//			if err := h.DB.Save(goal).Error; err != nil {
//				return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–ª–∏ %d: %v", goal.ID, err)
//			}
//
//			if free <= 0 {
//				break
//			}
//		}
//	}
//
//	return nil
//}

//func (h *Handler) AddGoalHandler(c tele.Context) error {
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	h.resetFSM(c.Sender().ID)
//	fsm := h.getOrCreateAdminFSM(c.Sender().ID)
//	h.UserData[c.Sender().ID] = map[string]interface{}{
//		"action": "add_goal",
//		"mode":   "admin",
//	}
//
//	if err := fsm.Event(context.Background(), "add_goal_title"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.")
//	}
//
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–µ–ª–∏:")
//}
//
//func (h *Handler) processGoalTitle(c tele.Context, fsm *fsm.FSM) error {
//	title := c.Text()
//	if title == "" {
//		return c.Send("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
//	}
//	h.UserData[c.Sender().ID]["title"] = title
//	if err := fsm.Event(context.Background(), "add_goal_description"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.")
//	}
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–µ–ª–∏:")
//}
//
//func (h *Handler) processGoalDescription(c tele.Context, fsm *fsm.FSM) error {
//	description := c.Text()
//	if description == "" {
//		return c.Send("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
//	}
//	h.UserData[c.Sender().ID]["description"] = description
//	if err := fsm.Event(context.Background(), "add_goal_target_sum"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ.")
//	}
//	return c.Send("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é —Å—É–º–º—É (—á–∏—Å–ª–æ):")
//}
//
//func (h *Handler) processGoalTargetSum(c tele.Context, fsm *fsm.FSM) error {
//	targetSum, err := strconv.ParseFloat(c.Text(), 64)
//	if err != nil || targetSum <= 0 {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
//	}
//	h.UserData[c.Sender().ID]["target_sum"] = targetSum
//
//	menu := &tele.ReplyMarkup{}
//	btnLow := menu.Data("üîµ –ù–∏–∑–∫–∏–π", "priority_low", "low")
//	btnMedium := menu.Data("üü† –°—Ä–µ–¥–Ω–∏–π", "priority_medium", "medium")
//	btnHigh := menu.Data("üî¥ –í—ã—Å–æ–∫–∏–π", "priority_high", "high")
//	BackBtn := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//	menu.Inline(
//		menu.Row(btnLow, btnMedium, btnHigh),
//		menu.Row(BackBtn),
//	)
//
//	if err := fsm.Event(context.Background(), "finish_goal"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
//	}
//	return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏:", menu)
//}
//
//func (h *Handler) SetPriorityHandler(c tele.Context) error {
//	action, ok := h.UserData[c.Sender().ID]["action"]
//	if !ok || action != "add_goal" {
//		return c.Send("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	priority := c.Callback().Data
//	if priority != "low" && priority != "medium" && priority != "high" {
//		return c.Send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.")
//	}
//	h.UserData[c.Sender().ID]["priority"] = priority
//
//	title, _ := h.UserData[c.Sender().ID]["title"].(string)
//	description, _ := h.UserData[c.Sender().ID]["description"].(string)
//	targetSum, _ := h.UserData[c.Sender().ID]["target_sum"].(float64)
//
//	goal := models.Goal{
//		Title:        title,
//		Description:  description,
//		TargetSum:    targetSum,
//		Status:       "active",
//		Priority:     priority,
//		AdminID:      uint(c.Sender().ID),
//		AllocatedSum: 0,
//	}
//
//	if err := h.DB.Create(&goal).Error; err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ü–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
//	}
//
//	if err := h.reallocateFundsForAllGoals(); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–µ–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –Ω–æ–≤–æ–π —Ü–µ–ª–∏: %v", err)
//	}
//
//	back := &tele.ReplyMarkup{}
//	BackBtn := back.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//	back.Inline(back.Row(BackBtn))
//
//	delete(h.UserData, c.Sender().ID)
//	h.resetFSM(c.Sender().ID)
//	return c.Send("‚úÖ –¶–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", back)
//}
//
//func (h *Handler) onListGoal(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	var goals []models.Goal
//	if err := h.DB.Where("deleted_at IS NULL").Find(&goals).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ü–µ–ª–µ–π.")
//	}
//
//	back := &tele.ReplyMarkup{}
//	BackBtn := back.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//	back.Inline(back.Row(BackBtn))
//
//	if len(goals) == 0 {
//		return c.Send("–¶–µ–ª–µ–π –Ω–µ—Ç.", back)
//	}
//
//	message := "üéØ <b>–°–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π:</b>\n\n"
//	for i, g := range goals {
//		message += fmt.Sprintf("%d. <b>%s</b>\nID: %d\n–û–ø–∏—Å–∞–Ω–∏–µ: %s\n–¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞: %.2f\n–í—ã–¥–µ–ª–µ–Ω–æ: %.2f\n–°—Ç–∞—Ç—É—Å: %s\n–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: %s\n\n",
//			i+1, g.Title, g.ID, g.Description, g.TargetSum, g.AllocatedSum, g.Status, g.Priority)
//	}
//
//	return c.Send(message, back, tele.ModeHTML)
//}
//
//func (h *Handler) onEditGoal(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	h.resetFSM(c.Sender().ID)
//	fsm := h.getOrCreateAdminFSM(c.Sender().ID)
//	h.UserData[c.Sender().ID] = map[string]interface{}{
//		"mode":   "admin",
//		"action": "edit_goal",
//	}
//
//	if err := fsm.Event(context.Background(), "go_edit_goal_select"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
//	}
//
//	var goals []models.Goal
//	if err := h.DB.Where("deleted_at IS NULL").Find(&goals).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ü–µ–ª–µ–π.")
//	}
//
//	back := &tele.ReplyMarkup{}
//	BackBtn := back.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//
//	if len(goals) == 0 {
//		back.Inline(back.Row(BackBtn))
//		return c.Send("–ù–µ—Ç —Ü–µ–ª–µ–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.", back)
//	}
//
//	menu := &tele.ReplyMarkup{}
//	rows := []tele.Row{}
//	for _, g := range goals {
//		btn := menu.Data(fmt.Sprintf("%s (ID:%d)", g.Title, g.ID), "edit_goal_select", strconv.Itoa(int(g.ID)))
//		rows = append(rows, menu.Row(btn))
//	}
//	menu.Inline(rows...)
//
//	return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", menu)
//}
//
//func (h *Handler) onEditGoalSelect(c tele.Context) error {
//	goalIDStr := c.Callback().Data
//	goalID, err := strconv.Atoi(goalIDStr)
//	if err != nil {
//		return c.Respond(&tele.CallbackResponse{Text: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ü–µ–ª–∏", ShowAlert: true})
//	}
//
//	var goal models.Goal
//	if err := h.DB.First(&goal, goalID).Error; err != nil {
//		return c.Respond(&tele.CallbackResponse{Text: "–¶–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", ShowAlert: true})
//	}
//
//	adminFSM := h.getOrCreateAdminFSM(c.Sender().ID)
//	if err := adminFSM.Event(context.Background(), "go_edit_goal_field"); err != nil {
//		h.resetFSM(c.Sender().ID)
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.")
//	}
//
//	h.UserData[c.Sender().ID]["goalID"] = goalID
//
//	menu := &tele.ReplyMarkup{}
//	btnTitle := menu.Data("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", "edit_field", "title")
//	btnDesc := menu.Data("–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", "edit_field", "description")
//	btnSum := menu.Data("–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤—É—é —Å—É–º–º—É", "edit_field", "target_sum")
//	btnGoalSum := menu.Data("–ò–∑–º–µ–Ω–∏—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É", "edit_allocated_sum", "allocated_sum")
//	btnPriority := menu.Data("–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç", "edit_field", "priority")
//	btnStatus := menu.Data("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", "edit_field", "status")
//	BackBtn := menu.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//
//	menu.Inline(
//		menu.Row(btnTitle),
//		menu.Row(btnDesc),
//		menu.Row(btnSum),
//		menu.Row(btnGoalSum),
//		menu.Row(btnPriority),
//		menu.Row(btnStatus),
//		menu.Row(BackBtn),
//	)
//
//	return c.Edit(fmt.Sprintf("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–∏: <b>%s</b>\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", goal.Title), menu, tele.ModeHTML)
//}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ü–µ–ª–∏
//func (h *Handler) onDeleteGoal(c tele.Context) error {
//	h.tryDeleteMessage(c)
//	if !h.isAdminFromDB(int(c.Sender().ID)) {
//		return c.Send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
//	}
//
//	var goals []models.Goal
//	if err := h.DB.Where("deleted_at IS NULL").Find(&goals).Error; err != nil {
//		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ü–µ–ª–µ–π.")
//	}
//
//	back := &tele.ReplyMarkup{}
//	BackBtn := back.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_panel")
//
//	if len(goals) == 0 {
//		back.Inline(back.Row(BackBtn))
//		return c.Send("–ù–µ—Ç —Ü–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", back)
//	}
//
//	menu := &tele.ReplyMarkup{}
//	rows := []tele.Row{}
//	for _, g := range goals {
//		btn := menu.Data(fmt.Sprintf("–£–¥–∞–ª–∏—Ç—å: %s (ID:%d)", g.Title, g.ID), "delete_goal_confirm", strconv.Itoa(int(g.ID)))
//		rows = append(rows, menu.Row(btn))
//	}
//	menu.Inline(rows...)
//	back.Inline(menu.Row(BackBtn))
//
//	return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", menu)
//}
//
//func (h *Handler) onDeleteGoalConfirm(c tele.Context) error {
//	goalIDStr := c.Callback().Data
//	goalID, err := strconv.Atoi(goalIDStr)
//	if err != nil {
//		return c.Respond(&tele.CallbackResponse{Text: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ü–µ–ª–∏", ShowAlert: true})
//	}
//
//	var goal models.Goal
//	if err := h.DB.First(&goal, goalID).Error; err != nil {
//		return c.Respond(&tele.CallbackResponse{Text: "–¶–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", ShowAlert: true})
//	}
//
//	if err := h.DB.Delete(&goal).Error; err != nil {
//		return c.Respond(&tele.CallbackResponse{Text: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", ShowAlert: true})
//	}
//
//	if err := h.reallocateFundsForAllGoals(); err != nil {
//		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ü–µ–ª–∏: %v", err)
//	}
//
//	return c.Edit("‚úÖ –¶–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!\n–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", backButton("back_to_panel"))
//}
